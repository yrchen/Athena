BMAX	../include/bbs.h	/^#define	BMAX(a,b)	((a>b)?a:b)$/
BMIN	../include/bbs.h	/^#define	BMIN(a,b)	((a<b)?a:b)$/
Btime	str_time.c	/^Btime(clock)$/
CTRL	../include/global.h	/^#define CTRL(c) ('c'&037)       \/* This gives ESI/
Ctime	str_time.c	/^Ctime(clock)$/
Ctrl	../include/global.h	/^#define Ctrl(c)         ( c & 037 )$/
DL_func	dl_lib.c	/^DL_func(char *name, ...)$/
DL_get	dl_lib.c	/^DL_get(name)$/
Etime	str_time.c	/^Etime(clock)$/
HAS_HABIT	../include/perm.h	/^#define HAS_HABIT(x)     ((x)?cuser.habit&(x):1)$/
HAS_PERM	../include/perm.h	/^#define HAS_PERM(x)     ((x)?cuser.userlevel&(x):1/
HAVE_HABIT	../include/perm.h	/^#define HAVE_HABIT(x)    (cuser.habit&(x))$/
HAVE_PERM	../include/perm.h	/^#define HAVE_PERM(x)    (cuser.userlevel&(x))$/
Isspace	../include/xchat.h	/^Isspace (ch)$/
MAXMONEY	../include/config.h	/^#define MAXMONEY(cuser) ((cuser.totaltime*10) + (c/
Mxsort	xsort.c	/^main()$/
Now	str_time.c	/^Now()$/
PERM_HIDE	../include/perm.h	/^#define PERM_HIDE(u) ((u)->userlevel & PERM_SYSOP /
SWAPINIT	xsort.c	/^#define SWAPINIT(a, es) \\$/
acl_addr	acl_addr.c	/^acl_addr(acl, addr)$/
acl_has	acl_has.c	/^acl_has(acl, user, host)$/
archiv32	archiv32.c	/^archiv32(chrono, fname)$/
archiv32m	archiv32.c	/^archiv32m(chrono, fname)$/
attr_get	attr_lib.c	/^attr_get(userid, key, value)$/
attr_put	attr_lib.c	/^attr_put(userid, key, value)$/
attr_step	attr_lib.c	/^attr_step(userid, key, dflt, step)$/
b_suckinfile	b_suckinfile.c	/^b_suckinfile(fp, fname)$/
base64_code	str_decode.c	/^base64_code(x)$/
brd_fpath	f_path.c	/^brd_fpath(fpath, board, fname)$/
char_lower	../include/global.h	/^#define char_lower(c)  ((c >= 'A' && c <= 'Z') ? c/
chartoupper	../include/global.h	/^#define chartoupper(c)  ((c >= 'a' && c <= 'z') ? /
checkpasswd	str_passwd.c	/^checkpasswd(passwd, test)$/
chrono32	chrono32.c	/^chrono32(str)$/
ci_strncmp	ci_strncmp.c	/^ci_strncmp(s1, s2, n)$/
counter	counter.c	/^counter(filename,modes,n)$/
cut_ansistr	cut_ansistr.c	/^cut_ansistr(char *buf, char *str, int len) {$/
dns_addr	dns_addr.c	/^dns_addr(name)$/
dns_ident	dns_ident.c	/^dns_ident(lport, from, rhost, ruser)$/
dns_init	dns.c	/^dns_init()$/
dns_mx	dns_smtp.c	/^dns_mx(domain, mxlist)$/
dns_name	dns_name.c	/^dns_name(addr, name)$/
dns_open	dns_open.c	/^dns_open(host, port)$/
dns_query	dns.c	/^dns_query(name, qtype, ans)$/
dns_smtp	dns_smtp.c	/^dns_smtp(host)$/
f_cat	f_cat.c	/^void f_cat(char *fpath, char *msg)$/
f_cp	f_cp.c	/^f_cp(src, dst, mode)$/
f_exlock	f_lock.c	/^f_exlock(fd)$/
f_img	f_img.c	/^f_img(fpath, fsize)$/
f_ln	f_ln.c	/^f_ln(src, dst)$/
f_map	f_map.c	/^f_map(fpath, fsize)$/
f_mode	f_mode.c	/^f_mode(fpath)$/
f_mv	f_mv.c	/^f_mv(src, dst)$/
f_new	f_new.c	/^f_new(fold, fnew)$/
f_rm	f_rm.c	/^f_rm(fpath)$/
f_suck	f_suck.c	/^f_suck(fp, fpath)$/
f_unlock	f_lock.c	/^f_unlock(fd)$/
gem_fpath	f_path.c	/^gem_fpath(fpath, board, fname)$/
genpasswd	str_passwd.c	/^genpasswd(pw)$/
getdtablesize	../include/bbs.h	/^#define getdtablesize()         (64)$/
getshort	../include/dns.h	/^getshort(c)$/
hash32	hash32.c	/^hash32(str)$/
hdr_fpath	hdr_fpath.c	/^hdr_fpath(fpath, folder, hdr)$/
hdr_stamp	hdr_stamp.c	/^hdr_stamp(folder, token, hdr, fpath)$/
int_cmp	xsort.c	/^int_cmp(a, b)$/
invalid_brdname	invalid_brdname.c	/^int invalid_brdname(char *brd)$/
is_alnum	is_alnum.c	/^is_alnum(ch)$/
is_alpha	is_alpha.c	/^is_alpha(ch)$/
is_fpath	is_fpath.c	/^is_fpath(path)$/
isprint2	isprint2.c	/^isprint2(ch)$/
mak_dirs	mak_dirs.c	/^mak_dirs(fpath)$/
mak_fpath	f_path.c	/^mak_fpath(str, key, name)$/
med3	xsort.c	/^med3(a, b, c, cmp)$/
min	xsort.c	/^#define min(a, b)	(a) < (b) ? a : b$/
nextfield	nextfield.c	/^nextfield(data, field)$/
nextword	../include/xchat.h	/^nextword (str)$/
not_addr	not_addr.c	/^not_addr(addr)$/
not_alnum	not_alnum.c	/^not_alnum(ch)$/
not_alpha	not_alpha.c	/^not_alpha(ch)$/
output_rfc2047_base64	rfc2047.c	/^output_rfc2047_base64(fp, prefix, str, charset, su/
output_rfc2047_base64_3to4	rfc2047.c	/^output_rfc2047_base64_3to4(a, b, c, oa, ob, oc, od/
output_rfc2047_prefix	rfc2047.c	/^output_rfc2047_prefix(fp, str)$/
output_rfc2047_qp	rfc2047.c	/^void output_rfc2047_qp(FILE *fp, char *prefix, cha/
output_str	rfc2047.c	/^output_str(fp, prefix, str, charset, suffix)$/
qp_code	str_decode.c	/^qp_code(x)$/
rec_add	rec_add.c	/^rec_add(fpath, data, size)$/
rec_apply	rec_apply.c	/^rec_apply(fpath, fptr, size)$/
rec_get	rec_get.c	/^rec_get(fpath, data, size, pos)$/
rec_ins	rec_ins.c	/^rec_ins(fpath, data, size, pos, num)$/
rec_num	rec_num.c	/^rec_num(fpath, size)$/
rec_put	rec_put.c	/^rec_put(fpath, data, size, pos, fchk)$/
rm_dir	f_rm.c	/^rm_dir(fpath)$/
sem_init	sem.c	/^sem_init(int semkey,int *semid)$/
sem_lock	sem.c	/^sem_lock(int op,int semid)   \/*  sem_lock(SEM_LEA/
setadir	setpf.c	/^void setadir(char *buf, char *path)$/
setapath	setpf.c	/^void setapath(char *buf, char *boardname)$/
setbfile	setpf.c	/^void setbfile(char *buf, char *boardname, char *fn/
setbgdir	setpf.c	/^void setbgdir(char *buf, char *boardname)         /
setbpath	setpf.c	/^void setbpath(char *buf, char *boardname)$/
setdirpath	str_fpath.c	/^setdirpath(fpath, direct, fname)$/
sethomedir	setpf.c	/^void sethomedir(char *buf, char *userid)$/
sethomefile	setpf.c	/^void sethomefile(char *buf, char *userid, char *fn/
sethomeman	setpf.c	/^void sethomeman(char *buf, char *userid)$/
sethomepath	setpf.c	/^void sethomepath(char *buf, char *userid)$/
shm_new	shm.c	/^shm_new(shmkey, shmsize)$/
str_cat	str_cat.c	/^str_cat(char *dst, char *s1, char *s2)$/
str_cmp	str_cmp.c	/^str_cmp(s1, s2)$/
str_decode	str_decode.c	/^str_decode(str)$/
str_folder	str_folder.c	/^str_folder(fpath, folder, fname)$/
str_from	str_from.c	/^str_from(from, addr, nick)$/
str_has	str_has.c	/^str_has(list, tag)$/
str_hash	str_hash.c	/^str_hash(str, seed)$/
str_len	str_len.c	/^int str_len(char *str)$/
str_lower	str_lower.c	/^str_lower(dst, src)$/
str_ncmp	str_ncmp.c	/^str_ncmp(s1, s2, n)$/
str_ncpy	str_ncpy.c	/^str_ncpy(dst, src, n)$/
str_stamp	str_stamp.c	/^str_stamp(str, chrono)$/
str_str	str_str.c	/^str_str(str, tag) $/
str_trim	str_trim.c	/^str_trim(buf)			\/* remove trailing space *\/$/
str_ttl	str_ttl.c	/^str_ttl(title)$/
strip_ansi	strip_ansi.c	/^int strip_ansi(char *buf, char *str ,int mode)$/
strstr_lower	strstr_lower.c	/^strstr_lower(str, tag)$/
swap	xsort.c	/^#define swap(a, b)					\\$/
swapcode	xsort.c	/^#define swapcode(TYPE, parmi, parmj, n) { 		\\$/
swapfunc	xsort.c	/^swapfunc(a, b, n, swaptype)$/
trim2	str_trim2.c	/^char* trim2(char* buffer)$/
url_encode	url_encode.c	/^url_encode(dst, src)$/
usleep	../include/bbs.h	/^#define usleep(usec)            {               \\/
usr_fpath	f_path.c	/^usr_fpath(fpath, user, fname)$/
vecswap	xsort.c	/^#define vecswap(a, b, n) 	if ((n) > 0) swapfunc(a,/
xsort	xsort.c	/^xsort(a, n, es, cmp)$/
xwrite	xwrite.c	/^xwrite(fd, data, size)$/
